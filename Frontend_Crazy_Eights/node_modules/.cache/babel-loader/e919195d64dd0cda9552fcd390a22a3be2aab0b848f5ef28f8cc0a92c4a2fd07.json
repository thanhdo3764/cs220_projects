{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/thanhdo/WSU/CS224/CS-220-Project1/Frontend_Crazy_Eights/src/index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst readline_sync_1 = __importDefault(require(\"readline-sync\"));\nconst react_1 = __importStar(require(\"react\"));\nconst client_1 = require(\"react-dom/client\");\nvar Rank;\n(function (Rank) {\n  Rank[Rank[\"Ace\"] = 1] = \"Ace\";\n  Rank[Rank[\"Two\"] = 2] = \"Two\";\n  Rank[Rank[\"Three\"] = 3] = \"Three\";\n  Rank[Rank[\"Four\"] = 4] = \"Four\";\n  Rank[Rank[\"Five\"] = 5] = \"Five\";\n  Rank[Rank[\"Six\"] = 6] = \"Six\";\n  Rank[Rank[\"Seven\"] = 7] = \"Seven\";\n  Rank[Rank[\"Eight\"] = 8] = \"Eight\";\n  Rank[Rank[\"Nine\"] = 9] = \"Nine\";\n  Rank[Rank[\"Ten\"] = 10] = \"Ten\";\n  Rank[Rank[\"Jack\"] = 11] = \"Jack\";\n  Rank[Rank[\"Queen\"] = 13] = \"Queen\";\n  Rank[Rank[\"King\"] = 14] = \"King\";\n})(Rank || (Rank = {}));\nvar Suit;\n(function (Suit) {\n  Suit[Suit[\"Spades\"] = 160] = \"Spades\";\n  Suit[Suit[\"Clubs\"] = 208] = \"Clubs\";\n  Suit[Suit[\"Diamonds\"] = 192] = \"Diamonds\";\n  Suit[Suit[\"Hearts\"] = 176] = \"Hearts\";\n})(Suit || (Suit = {}));\nclass Card {\n  constructor(cardIndex) {\n    this.cardString = \"\";\n    // Calculate the rank and suit of the card\n    this.suit = cardIndex & 0x000F0;\n    this.rank = cardIndex & 0x0000F;\n    // Convert card into a string\n    this.cardString = String.fromCodePoint(0x1F000 | this.suit | this.rank) + \" \" + Rank[this.rank] + \" of \" + Suit[this.suit];\n  }\n  /**\n   *  Takes the cardString field and prints it to console\n   */\n  printCard() {\n    console.log(this.cardString);\n  }\n}\nclass Participant {\n  constructor(name) {\n    this.name = \"\";\n    this.hand = [];\n    this.handIndex = 0;\n    this.name = name;\n  }\n  /**\n   * Sets the handIndex to a playable card depending on the given\n   * rank and suit and returns true or false otherwise\n   */\n  hasPlayableCard(rank, suit) {\n    // Loops through the hand to find a playable card\n    for (let i = 0; i < this.hand.length; i++) {\n      if (this.hand[i].suit === suit || this.hand[i].rank === rank || this.hand[i].rank === Rank.Eight) {\n        this.handIndex = i;\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Remove and return the card at handIndex depending on the,\n   * rank and suit, otherwise, return undefined.\n   */\n  playCard(rank, suit) {\n    let cardInHand = this.hand[this.handIndex];\n    // If the card has the same suit, rank, or is an eight, play card.\n    if (cardInHand.suit === suit || cardInHand.rank === rank || cardInHand.rank === Rank.Eight) {\n      let removedCard = this.hand.splice(this.handIndex, 1);\n      this.handIndex = 0;\n      console.log(this.name, \"played a\", removedCard[0].cardString);\n      return removedCard[0];\n    }\n    return undefined;\n  }\n  /**\n   * Add a card to hand, and set the handIndex to this card\n   */\n  add(card) {\n    this.hand.push(card);\n    this.handIndex = this.hand.length - 1;\n  }\n  /**\n   * Cycles to the next card in hand\n   */\n  cycleCard() {\n    this.handIndex++;\n    if (this.handIndex >= this.hand.length) this.handIndex = 0;\n    console.log(this.name, \"is holding the\", this.hand[this.handIndex].cardString);\n  }\n  /**\n   * Check if the participant has an empty hand\n   */\n  hasWon() {\n    return this.hand.length == 0;\n  }\n  /**\n   * Print the cards in hand\n   */\n  printHand() {\n    console.log(this.name + \"'s Cards:\");\n    for (let card of this.hand) {\n      card.printCard();\n    }\n  }\n}\nclass Game {\n  constructor() {\n    this.stock = [];\n    this.pile = [];\n    this.participants = [];\n    this.participants.push(new Participant(\"Player\"));\n    this.participants.push(new Participant(\"Bot 1\"));\n    this.participants.push(new Participant(\"Bot 2\"));\n    this.participants.push(new Participant(\"Bot 3\"));\n    // Initialize gameDeck with all 52 cards\n    for (let suit = 0xA0; suit <= 0xD0; suit += 0x10) {\n      for (let rank = 0x01; rank <= 0x0E; rank += 0x01) {\n        if (rank === 0x0C) continue;\n        this.stock.push(new Card(0x1F000 | suit | rank));\n      }\n    }\n    this.shuffleStock();\n    console.log(\"-------------\");\n    console.log(\"Crazy Eight's\");\n    console.log(\"-------------\\n\");\n  }\n  /**\n   * Shuffles the cards in stock\n   */\n  shuffleStock() {\n    // Choose two random cards and swap. Repeat 51 times.\n    for (let i = 0; i < 51; i++) {\n      let firstCardIndex = Math.floor(Math.random() * this.stock.length);\n      let secondCardIndex = Math.floor(Math.random() * this.stock.length);\n      let temp = this.stock[firstCardIndex];\n      this.stock[firstCardIndex] = this.stock[secondCardIndex];\n      this.stock[secondCardIndex] = temp;\n    }\n  }\n  /**\n   * Returns the top card from the stock. If stock was empty, take all\n   * but the top card from the pile and shuffle it into the stock\n   */\n  dealCard() {\n    if (this.stock.length === 0) {\n      this.stock = this.pile.splice(0, this.pile.length - 1);\n      this.shuffleStock();\n    }\n    return this.stock.pop();\n  }\n  /**\n   * Take a command to return a card with that suit.\n   * To be used when an Eight is played.\n   */\n  switchSuit(suitCmd) {\n    switch (suitCmd) {\n      case 0:\n      case 's':\n        console.log(\"\\nThe suit was switched to Spades!\");\n        return new Card(0x1F000 | 0xA0);\n      case 1:\n      case 'c':\n        console.log(\"\\nThe suit was switched to Clubs!\");\n        return new Card(0x1F000 | 0xD0);\n      case 2:\n      case 'd':\n        console.log(\"\\nThe suit was switched to Diamonds!\");\n        return new Card(0x1F000 | 0xC0);\n      case 3:\n      case 'h':\n        console.log(\"\\nThe suit was switched to Hearts!\");\n        return new Card(0x1F000 | 0xB0);\n    }\n    return new Card(0x1F000 | 0xA0);\n  }\n  /**\n   * Simulates the player's turn by asking for input until a card\n   * is played. Return the card or suit played.\n   */\n  playerTurn(p, topCard) {\n    let cmd = '';\n    while (cmd !== 'p') {\n      // Ask for command\n      cmd = readline_sync_1.default.question(\"Type (p)lace or (c)ycle or (d)raw: \");\n      switch (cmd) {\n        case 'p':\n          // Re-ask question if card was unplayable\n          let cardInQuestion = p.playCard(topCard.rank, topCard.suit);\n          if (cardInQuestion === undefined) {\n            cmd = '';\n            break;\n          }\n          topCard = cardInQuestion;\n          this.pile.push(topCard);\n          // Ask for suit if player played an Eight\n          if (topCard.rank === Rank.Eight) {\n            let newCmd = '';\n            while (newCmd !== 's' && newCmd !== 'c' && newCmd !== 'd' && newCmd !== 'h') {\n              newCmd = readline_sync_1.default.question(\"Type (s)pades or (c)lubs or (d)iamonds or (h)earts: \");\n            }\n            topCard = this.switchSuit(newCmd);\n          }\n          break;\n        case 'c':\n          p.cycleCard();\n          break;\n        case 'd':\n          p.add(this.dealCard());\n          console.log(\"Player was dealt the\", p.hand[p.hand.length - 1].cardString);\n          break;\n      }\n    }\n    return topCard;\n  }\n  /**\n   * Simulates a game of Crazy Eights\n   */\n  hostGame() {\n    let topCard;\n    // Deal 5 cards to all participants\n    for (let i = 0; i < 5; i++) {\n      for (let p of this.participants) {\n        p.add(this.dealCard());\n      }\n    }\n    // Place a starter card \n    while (true) {\n      topCard = this.stock.pop();\n      this.pile.push(topCard);\n      if (topCard.rank !== Rank.Eight) break;\n    }\n    // Loop until there is a winner\n    let hasWinner = false;\n    while (!hasWinner) {\n      // Loop through the participants' turn\n      for (let p of this.participants) {\n        console.log(\"\\nTop card is\", topCard.cardString);\n        // Player's Turn\n        if (p.name === \"Player\") {\n          p.printHand();\n          console.log(\"\\nPlayer is holding the\", p.hand[p.handIndex].cardString);\n          // Question player for card to add\n          topCard = this.playerTurn(p, topCard);\n          // Bots' Turn\n        } else {\n          // Bot draws cards until it's playable\n          while (!p.hasPlayableCard(topCard.rank, topCard.suit)) p.add(this.dealCard());\n          topCard = p.playCard(topCard.rank, topCard.suit);\n          this.pile.push(topCard);\n          // If Bot played an Eight, choose a random suit\n          if (topCard.rank === Rank.Eight) topCard = this.switchSuit(Math.floor(Math.random() * 4));\n        }\n        if (p.hasWon()) {\n          console.log(p.name, \"has won!\");\n          hasWinner = true;\n          break;\n        }\n      }\n    }\n  }\n  printGameStatus() {\n    console.log(\"Card's in stock:\");\n    for (let card of this.stock) {\n      card.printCard();\n    }\n    console.log(\"\");\n    console.log(\"Card's in pile:\");\n    for (let card of this.pile) {\n      card.printCard();\n    }\n    console.log(\"\");\n    for (let p of this.participants) {\n      p.printHand();\n      console.log();\n    }\n  }\n}\nclass MyListState {\n  constructor() {\n    this.nClicks = 0;\n  }\n}\nclass MyList extends react_1.Component {\n  constructor(props) {\n    super(props);\n    this.state = new MyListState();\n    this.addClick = this.addClick.bind(this);\n  }\n  render() {\n    var _a;\n    const children = react_1.default.Children.toArray(this.props.children);\n    const result = [];\n    const nChildren = (_a = this.props.maxItems) !== null && _a !== void 0 ? _a : children.length;\n    for (let child = 0; child < Math.min(nChildren, children.length); child++) {\n      result.push(children[child]);\n    }\n    result.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"You have clicked \", this.state.nClicks, \" times.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: this.addClick,\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 16\n    }, this);\n  }\n  addClick() {\n    let newState = new MyListState();\n    newState.nClicks = this.state.nClicks + 1;\n    this.setState(newState);\n  }\n}\nclass App extends react_1.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Crazy Eights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MyList, {\n        maxItems: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 16\n    }, this);\n  }\n}\nconst rootElem = document.getElementById('root');\nif (rootElem == null) {\n  alert('you forgot to put a root element in your HTML file.');\n}\nconst root = (0, client_1.createRoot)(rootElem);\nroot.render( /*#__PURE__*/_jsxDEV(react_1.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 361,\n  columnNumber: 13\n}, this));\nlet g = new Game();\ng.hostGame();\ng.printGameStatus();","map":{"version":3,"names":["_jsxFileName","jsxDEV","_jsxDEV","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","readline_sync_1","require","react_1","client_1","Rank","Suit","Card","constructor","cardIndex","cardString","suit","rank","String","fromCodePoint","printCard","console","log","Participant","name","hand","handIndex","hasPlayableCard","i","length","Eight","playCard","cardInHand","removedCard","splice","add","card","push","cycleCard","hasWon","printHand","Game","stock","pile","participants","shuffleStock","firstCardIndex","Math","floor","random","secondCardIndex","temp","dealCard","pop","switchSuit","suitCmd","playerTurn","p","topCard","cmd","default","question","cardInQuestion","newCmd","hostGame","hasWinner","printGameStatus","MyListState","nClicks","MyList","Component","props","state","addClick","bind","render","_a","children","Children","toArray","nChildren","maxItems","child","min","fileName","lineNumber","columnNumber","onClick","newState","setState","App","rootElem","document","getElementById","alert","root","createRoot","StrictMode","g"],"sources":["/Users/thanhdo/WSU/CS224/CS-220-Project1/Frontend_Crazy_Eights/src/index.jsx"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst readline_sync_1 = __importDefault(require(\"readline-sync\"));\nconst react_1 = __importStar(require(\"react\"));\nconst client_1 = require(\"react-dom/client\");\nvar Rank;\n(function (Rank) {\n    Rank[Rank[\"Ace\"] = 1] = \"Ace\";\n    Rank[Rank[\"Two\"] = 2] = \"Two\";\n    Rank[Rank[\"Three\"] = 3] = \"Three\";\n    Rank[Rank[\"Four\"] = 4] = \"Four\";\n    Rank[Rank[\"Five\"] = 5] = \"Five\";\n    Rank[Rank[\"Six\"] = 6] = \"Six\";\n    Rank[Rank[\"Seven\"] = 7] = \"Seven\";\n    Rank[Rank[\"Eight\"] = 8] = \"Eight\";\n    Rank[Rank[\"Nine\"] = 9] = \"Nine\";\n    Rank[Rank[\"Ten\"] = 10] = \"Ten\";\n    Rank[Rank[\"Jack\"] = 11] = \"Jack\";\n    Rank[Rank[\"Queen\"] = 13] = \"Queen\";\n    Rank[Rank[\"King\"] = 14] = \"King\";\n})(Rank || (Rank = {}));\nvar Suit;\n(function (Suit) {\n    Suit[Suit[\"Spades\"] = 160] = \"Spades\";\n    Suit[Suit[\"Clubs\"] = 208] = \"Clubs\";\n    Suit[Suit[\"Diamonds\"] = 192] = \"Diamonds\";\n    Suit[Suit[\"Hearts\"] = 176] = \"Hearts\";\n})(Suit || (Suit = {}));\nclass Card {\n    constructor(cardIndex) {\n        this.cardString = \"\";\n        // Calculate the rank and suit of the card\n        this.suit = cardIndex & 0x000F0;\n        this.rank = cardIndex & 0x0000F;\n        // Convert card into a string\n        this.cardString = String.fromCodePoint(0x1F000 | this.suit | this.rank) + \" \" + Rank[this.rank] + \" of \" + Suit[this.suit];\n    }\n    /**\n     *  Takes the cardString field and prints it to console\n     */\n    printCard() {\n        console.log(this.cardString);\n    }\n}\nclass Participant {\n    constructor(name) {\n        this.name = \"\";\n        this.hand = [];\n        this.handIndex = 0;\n        this.name = name;\n    }\n    /**\n     * Sets the handIndex to a playable card depending on the given\n     * rank and suit and returns true or false otherwise\n     */\n    hasPlayableCard(rank, suit) {\n        // Loops through the hand to find a playable card\n        for (let i = 0; i < this.hand.length; i++) {\n            if (this.hand[i].suit === suit || this.hand[i].rank === rank || this.hand[i].rank === Rank.Eight) {\n                this.handIndex = i;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Remove and return the card at handIndex depending on the,\n     * rank and suit, otherwise, return undefined.\n     */\n    playCard(rank, suit) {\n        let cardInHand = this.hand[this.handIndex];\n        // If the card has the same suit, rank, or is an eight, play card.\n        if (cardInHand.suit === suit || cardInHand.rank === rank || cardInHand.rank === Rank.Eight) {\n            let removedCard = this.hand.splice(this.handIndex, 1);\n            this.handIndex = 0;\n            console.log(this.name, \"played a\", removedCard[0].cardString);\n            return removedCard[0];\n        }\n        return undefined;\n    }\n    /**\n     * Add a card to hand, and set the handIndex to this card\n     */\n    add(card) {\n        this.hand.push(card);\n        this.handIndex = this.hand.length - 1;\n    }\n    /**\n     * Cycles to the next card in hand\n     */\n    cycleCard() {\n        this.handIndex++;\n        if (this.handIndex >= this.hand.length)\n            this.handIndex = 0;\n        console.log(this.name, \"is holding the\", this.hand[this.handIndex].cardString);\n    }\n    /**\n     * Check if the participant has an empty hand\n     */\n    hasWon() {\n        return this.hand.length == 0;\n    }\n    /**\n     * Print the cards in hand\n     */\n    printHand() {\n        console.log(this.name + \"'s Cards:\");\n        for (let card of this.hand) {\n            card.printCard();\n        }\n    }\n}\nclass Game {\n    constructor() {\n        this.stock = [];\n        this.pile = [];\n        this.participants = [];\n        this.participants.push(new Participant(\"Player\"));\n        this.participants.push(new Participant(\"Bot 1\"));\n        this.participants.push(new Participant(\"Bot 2\"));\n        this.participants.push(new Participant(\"Bot 3\"));\n        // Initialize gameDeck with all 52 cards\n        for (let suit = 0xA0; suit <= 0xD0; suit += 0x10) {\n            for (let rank = 0x01; rank <= 0x0E; rank += 0x01) {\n                if (rank === 0x0C)\n                    continue;\n                this.stock.push(new Card(0x1F000 | suit | rank));\n            }\n        }\n        this.shuffleStock();\n        console.log(\"-------------\");\n        console.log(\"Crazy Eight's\");\n        console.log(\"-------------\\n\");\n    }\n    /**\n     * Shuffles the cards in stock\n     */\n    shuffleStock() {\n        // Choose two random cards and swap. Repeat 51 times.\n        for (let i = 0; i < 51; i++) {\n            let firstCardIndex = Math.floor(Math.random() * this.stock.length);\n            let secondCardIndex = Math.floor(Math.random() * this.stock.length);\n            let temp = this.stock[firstCardIndex];\n            this.stock[firstCardIndex] = this.stock[secondCardIndex];\n            this.stock[secondCardIndex] = temp;\n        }\n    }\n    /**\n     * Returns the top card from the stock. If stock was empty, take all\n     * but the top card from the pile and shuffle it into the stock\n     */\n    dealCard() {\n        if (this.stock.length === 0) {\n            this.stock = this.pile.splice(0, this.pile.length - 1);\n            this.shuffleStock();\n        }\n        return this.stock.pop();\n    }\n    /**\n     * Take a command to return a card with that suit.\n     * To be used when an Eight is played.\n     */\n    switchSuit(suitCmd) {\n        switch (suitCmd) {\n            case (0):\n            case ('s'):\n                console.log(\"\\nThe suit was switched to Spades!\");\n                return new Card(0x1F000 | 0xA0);\n            case (1):\n            case ('c'):\n                console.log(\"\\nThe suit was switched to Clubs!\");\n                return new Card(0x1F000 | 0xD0);\n            case (2):\n            case ('d'):\n                console.log(\"\\nThe suit was switched to Diamonds!\");\n                return new Card(0x1F000 | 0xC0);\n            case (3):\n            case ('h'):\n                console.log(\"\\nThe suit was switched to Hearts!\");\n                return new Card(0x1F000 | 0xB0);\n        }\n        return new Card(0x1F000 | 0xA0);\n    }\n    /**\n     * Simulates the player's turn by asking for input until a card\n     * is played. Return the card or suit played.\n     */\n    playerTurn(p, topCard) {\n        let cmd = '';\n        while (cmd !== 'p') {\n            // Ask for command\n            cmd = readline_sync_1.default.question(\"Type (p)lace or (c)ycle or (d)raw: \");\n            switch (cmd) {\n                case ('p'):\n                    // Re-ask question if card was unplayable\n                    let cardInQuestion = p.playCard(topCard.rank, topCard.suit);\n                    if (cardInQuestion === undefined) {\n                        cmd = '';\n                        break;\n                    }\n                    topCard = cardInQuestion;\n                    this.pile.push(topCard);\n                    // Ask for suit if player played an Eight\n                    if (topCard.rank === Rank.Eight) {\n                        let newCmd = '';\n                        while (newCmd !== 's' && newCmd !== 'c' && newCmd !== 'd' && newCmd !== 'h') {\n                            newCmd = readline_sync_1.default.question(\"Type (s)pades or (c)lubs or (d)iamonds or (h)earts: \");\n                        }\n                        topCard = this.switchSuit(newCmd);\n                    }\n                    break;\n                case ('c'):\n                    p.cycleCard();\n                    break;\n                case ('d'):\n                    p.add(this.dealCard());\n                    console.log(\"Player was dealt the\", p.hand[p.hand.length - 1].cardString);\n                    break;\n            }\n        }\n        return topCard;\n    }\n    /**\n     * Simulates a game of Crazy Eights\n     */\n    hostGame() {\n        let topCard;\n        // Deal 5 cards to all participants\n        for (let i = 0; i < 5; i++) {\n            for (let p of this.participants) {\n                p.add(this.dealCard());\n            }\n        }\n        // Place a starter card \n        while (true) {\n            topCard = this.stock.pop();\n            this.pile.push(topCard);\n            if (topCard.rank !== Rank.Eight)\n                break;\n        }\n        // Loop until there is a winner\n        let hasWinner = false;\n        while (!hasWinner) {\n            // Loop through the participants' turn\n            for (let p of this.participants) {\n                console.log(\"\\nTop card is\", topCard.cardString);\n                // Player's Turn\n                if (p.name === \"Player\") {\n                    p.printHand();\n                    console.log(\"\\nPlayer is holding the\", p.hand[p.handIndex].cardString);\n                    // Question player for card to add\n                    topCard = this.playerTurn(p, topCard);\n                    // Bots' Turn\n                }\n                else {\n                    // Bot draws cards until it's playable\n                    while (!p.hasPlayableCard(topCard.rank, topCard.suit))\n                        p.add(this.dealCard());\n                    topCard = p.playCard(topCard.rank, topCard.suit);\n                    this.pile.push(topCard);\n                    // If Bot played an Eight, choose a random suit\n                    if (topCard.rank === Rank.Eight)\n                        topCard = this.switchSuit(Math.floor(Math.random() * 4));\n                }\n                if (p.hasWon()) {\n                    console.log(p.name, \"has won!\");\n                    hasWinner = true;\n                    break;\n                }\n            }\n        }\n    }\n    printGameStatus() {\n        console.log(\"Card's in stock:\");\n        for (let card of this.stock) {\n            card.printCard();\n        }\n        console.log(\"\");\n        console.log(\"Card's in pile:\");\n        for (let card of this.pile) {\n            card.printCard();\n        }\n        console.log(\"\");\n        for (let p of this.participants) {\n            p.printHand();\n            console.log();\n        }\n    }\n}\nclass MyListState {\n    constructor() {\n        this.nClicks = 0;\n    }\n}\nclass MyList extends react_1.Component {\n    constructor(props) {\n        super(props);\n        this.state = new MyListState();\n        this.addClick = this.addClick.bind(this);\n    }\n    render() {\n        var _a;\n        const children = react_1.default.Children.toArray(this.props.children);\n        const result = [];\n        const nChildren = (_a = this.props.maxItems) !== null && _a !== void 0 ? _a : children.length;\n        for (let child = 0; child < Math.min(nChildren, children.length); child++) {\n            result.push(children[child]);\n        }\n        result.push(<li>You have clicked {this.state.nClicks} times.</li>);\n        return <ul onClick={this.addClick}>{result}</ul>;\n    }\n    addClick() {\n        let newState = new MyListState();\n        newState.nClicks = this.state.nClicks + 1;\n        this.setState(newState);\n    }\n}\nclass App extends react_1.Component {\n    render() {\n        return <div>\n            <p>Crazy Eights</p>\n            <MyList maxItems={2}>\n                <li>one</li>\n                <li>two</li>\n                <li>three</li>\n            </MyList>\n        </div>;\n    }\n}\nconst rootElem = document.getElementById('root');\nif (rootElem == null) {\n    alert('you forgot to put a root element in your HTML file.');\n}\nconst root = (0, client_1.createRoot)(rootElem);\nroot.render(<react_1.StrictMode>\n        <App />\n    </react_1.StrictMode>);\nlet g = new Game();\ng.hostGame();\ng.printGameStatus();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}