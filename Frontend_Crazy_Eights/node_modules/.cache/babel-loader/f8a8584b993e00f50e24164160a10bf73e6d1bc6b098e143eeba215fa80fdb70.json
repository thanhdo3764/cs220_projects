{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/thanhdo/WSU/CS224/CS-220-Project1/Frontend_Crazy_Eights/src/index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst react_1 = __importStar(require(\"react\"));\nconst client_1 = require(\"react-dom/client\");\nvar Rank;\n(function (Rank) {\n  Rank[Rank[\"Ace\"] = 1] = \"Ace\";\n  Rank[Rank[\"Two\"] = 2] = \"Two\";\n  Rank[Rank[\"Three\"] = 3] = \"Three\";\n  Rank[Rank[\"Four\"] = 4] = \"Four\";\n  Rank[Rank[\"Five\"] = 5] = \"Five\";\n  Rank[Rank[\"Six\"] = 6] = \"Six\";\n  Rank[Rank[\"Seven\"] = 7] = \"Seven\";\n  Rank[Rank[\"Eight\"] = 8] = \"Eight\";\n  Rank[Rank[\"Nine\"] = 9] = \"Nine\";\n  Rank[Rank[\"Ten\"] = 10] = \"Ten\";\n  Rank[Rank[\"Jack\"] = 11] = \"Jack\";\n  Rank[Rank[\"Queen\"] = 13] = \"Queen\";\n  Rank[Rank[\"King\"] = 14] = \"King\";\n})(Rank || (Rank = {}));\nvar Suit;\n(function (Suit) {\n  Suit[Suit[\"Spades\"] = 160] = \"Spades\";\n  Suit[Suit[\"Clubs\"] = 208] = \"Clubs\";\n  Suit[Suit[\"Diamonds\"] = 192] = \"Diamonds\";\n  Suit[Suit[\"Hearts\"] = 176] = \"Hearts\";\n})(Suit || (Suit = {}));\nclass Card {\n  constructor(cardIndex) {\n    this.cardString = \"\";\n    // Calculate the rank and suit of the card\n    this.suit = cardIndex & 0x000F0;\n    this.rank = cardIndex & 0x0000F;\n    // Convert card into a string\n    this.cardString = String.fromCodePoint(0x1F000 | this.suit | this.rank) + \" \" + Rank[this.rank] + \" of \" + Suit[this.suit];\n  }\n  /**\n   *  Takes the cardString field and prints it to console\n   */\n  printCard() {\n    console.log(this.cardString);\n  }\n}\nclass Participant {\n  constructor(name) {\n    this.name = \"\";\n    this.hand = [];\n    this.handIndex = 0;\n    this.name = name;\n  }\n  /**\n   * Sets the handIndex to a playable card depending on the given\n   * rank and suit and returns true or false otherwise\n   */\n  hasPlayableCard(rank, suit) {\n    // Loops through the hand to find a playable card\n    for (let i = 0; i < this.hand.length; i++) {\n      if (this.hand[i].suit === suit || this.hand[i].rank === rank || this.hand[i].rank === Rank.Eight) {\n        this.handIndex = i;\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Remove and return the card at handIndex depending on the,\n   * rank and suit, otherwise, return undefined.\n   */\n  playCard(rank, suit) {\n    let cardInHand = this.hand[this.handIndex];\n    // If the card has the same suit, rank, or is an eight, play card.\n    if (cardInHand.suit === suit || cardInHand.rank === rank || cardInHand.rank === Rank.Eight) {\n      let removedCard = this.hand.splice(this.handIndex, 1);\n      this.handIndex = 0;\n      console.log(this.name, \"played a\", removedCard[0].cardString);\n      return removedCard[0];\n    }\n    return undefined;\n  }\n  /**\n   * Add a card to hand, and set the handIndex to this card\n   */\n  add(card) {\n    this.hand.push(card);\n    this.handIndex = this.hand.length - 1;\n  }\n  /**\n   * Cycles to the next card in hand\n   */\n  cycleCard() {\n    this.handIndex++;\n    if (this.handIndex >= this.hand.length) this.handIndex = 0;\n    console.log(this.name, \"is holding the\", this.hand[this.handIndex].cardString);\n  }\n  /**\n   * Check if the participant has an empty hand\n   */\n  hasWon() {\n    return this.hand.length == 0;\n  }\n  /**\n   * Print the cards in hand\n   */\n  printHand() {\n    console.log(this.name + \"'s Cards:\");\n    for (let card of this.hand) {\n      card.printCard();\n    }\n  }\n}\nclass GameState {\n  constructor() {\n    this.cardInHand = new Card(0x1F0A1);\n    this.playerCards = [];\n    this.topCard = new Card(0x1F0A1);\n  }\n}\nclass Game extends react_1.Component {\n  constructor(props) {\n    super(props);\n    this.stock = [];\n    this.pile = [];\n    this.player = new Participant(\"Player\");\n    this.participants = [];\n    this.topCard = this.pile[0];\n    this.participants.push(this.player);\n    this.participants.push(new Participant(\"Bot 1\"));\n    this.participants.push(new Participant(\"Bot 2\"));\n    this.participants.push(new Participant(\"Bot 3\"));\n    // Initialize gameDeck with all 52 cards\n    for (let suit = 0xA0; suit <= 0xD0; suit += 0x10) {\n      for (let rank = 0x01; rank <= 0x0E; rank += 0x01) {\n        if (rank === 0x0C) continue;\n        this.stock.push(new Card(0x1F000 | suit | rank));\n      }\n    }\n    this.shuffleStock();\n    this.hostGame();\n    let newState = new GameState();\n    newState.cardInHand = this.player.hand[this.player.handIndex];\n    newState.topCard = this.topCard;\n    newState.playerCards = this.player.hand;\n    this.state = newState;\n  }\n  render() {\n    let s = \"\";\n    for (let card of this.state.playerCards) {\n      s += card.cardString;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Crazy Eights.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.cardInHand.cardString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.topCard.cardString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: s\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Play Card\",\n        onClick: () => this.onClickPlay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Cycle Card\",\n        onClick: () => this.onClickCycle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Draw Card\",\n        onClick: () => this.onClickDraw()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 16\n    }, this);\n  }\n  /**\n   * Shuffles the cards in stock\n   */\n  shuffleStock() {\n    // Choose two random cards and swap. Repeat 51 times.\n    for (let i = 0; i < 51; i++) {\n      let firstCardIndex = Math.floor(Math.random() * this.stock.length);\n      let secondCardIndex = Math.floor(Math.random() * this.stock.length);\n      let temp = this.stock[firstCardIndex];\n      this.stock[firstCardIndex] = this.stock[secondCardIndex];\n      this.stock[secondCardIndex] = temp;\n    }\n  }\n  /**\n   * Returns the top card from the stock. If stock was empty, take all\n   * but the top card from the pile and shuffle it into the stock\n   */\n  dealCard() {\n    if (this.stock.length === 0) {\n      this.stock = this.pile.splice(0, this.pile.length - 1);\n      this.shuffleStock();\n    }\n    return this.stock.pop();\n  }\n  /**\n   * Take a command to return a card with that suit.\n   * To be used when an Eight is played.\n   */\n  switchSuit(suitCmd) {\n    switch (suitCmd) {\n      case 0:\n      case 's':\n        console.log(\"\\nThe suit was switched to Spades!\");\n        return new Card(0x1F000 | 0xA0);\n      case 1:\n      case 'c':\n        console.log(\"\\nThe suit was switched to Clubs!\");\n        return new Card(0x1F000 | 0xD0);\n      case 2:\n      case 'd':\n        console.log(\"\\nThe suit was switched to Diamonds!\");\n        return new Card(0x1F000 | 0xC0);\n      case 3:\n      case 'h':\n        console.log(\"\\nThe suit was switched to Hearts!\");\n        return new Card(0x1F000 | 0xB0);\n    }\n    return new Card(0x1F000 | 0xA0);\n  }\n  onClickPlay() {\n    // Player Turn\n    let cardInQuestion = this.player.playCard(this.topCard.rank, this.topCard.suit);\n    if (cardInQuestion === undefined) {\n      return false;\n    }\n    this.topCard = cardInQuestion;\n    this.pile.push(this.topCard);\n    this.updateState;\n    // Ask for suit if player played an Eight\n    // if (this.topCard.rank === Rank.Eight) {\n    // \tlet newCmd = '';\n    // \twhile (newCmd !== 's' && newCmd !== 'c' && newCmd !== 'd' && newCmd !== 'h') {\n    // \t\tnewCmd = readline.question(\"Type (s)pades or (c)lubs or (d)iamonds or (h)earts: \");\n    // \t}\n    // \tthis.topCard = this.switchSuit(newCmd);\n    // }\n    if (this.player.hasWon()) {\n      console.log(\"Player has won!\");\n      return true;\n    }\n    //Bots' Turn\n    for (let i = 1; i < 4; i++) {\n      let bot = this.participants[i];\n      // Bot draws cards until it's playable\n      while (!bot.hasPlayableCard(this.topCard.rank, this.topCard.suit)) bot.add(this.dealCard());\n      this.topCard = bot.playCard(this.topCard.rank, this.topCard.suit);\n      this.pile.push(this.topCard);\n      // If Bot played an Eight, choose a random suit\n      if (this.topCard.rank === Rank.Eight) this.topCard = this.switchSuit(Math.floor(Math.random() * 4));\n      this.updateState();\n      if (bot.hasWon()) {\n        console.log(bot.name, \"has won!\");\n        return true;\n      }\n    }\n    return false;\n  }\n  onClickCycle() {\n    this.player.cycleCard();\n    this.updateState();\n  }\n  onClickDraw() {\n    let cardDealt = this.dealCard();\n    this.player.add(cardDealt);\n    console.log(\"Player was dealt the\", cardDealt.cardString);\n    this.updateState();\n  }\n  updateState() {\n    let newState = new GameState();\n    newState.cardInHand = this.player.hand[this.player.handIndex];\n    newState.topCard = this.topCard;\n    newState.playerCards = this.player.hand;\n    this.setState(newState);\n  }\n  /**\n   * Simulates a game of Crazy Eights\n   */\n  hostGame() {\n    // Deal 5 cards to all participants\n    for (let i = 0; i < 5; i++) {\n      for (let p of this.participants) {\n        p.add(this.dealCard());\n      }\n    }\n    // Place a starter card \n    while (true) {\n      this.topCard = this.stock.pop();\n      this.pile.push(this.topCard);\n      if (this.topCard.rank !== Rank.Eight) break;\n    }\n    // // Loop through the participants' turn\n    // let cmd = '';\n    // let hasWinner = false;\n    // while(!hasWinner) {\n    // \tconsole.log(\"\\nTop card is\",this.topCard.cardString);\n    // \tthis.player.printHand();\n    // \tconsole.log(\"\\nPlayer is holding the\", this.player.hand[this.player.handIndex].cardString);\n    // \t// Ask for command\n    // \tcmd = readline.question(\"Type (p)lace or (c)ycle or (d)raw: \");\n    // \tswitch(cmd) {\n    // \tcase ('p'):\n    // \t\thasWinner = this.onClickPlay();\n    // \t\tbreak;\n    // \tcase ('c'):\n    // \t\tthis.onClickCycle();\n    // \t\tbreak;\n    // \tcase ('d'):\n    // \t\tthis.onClickDraw();\n    // \t\tbreak;\n    // \t}\n    //}\n  }\n  printGameStatus() {\n    console.log(\"Card's in stock:\");\n    for (let card of this.stock) {\n      card.printCard();\n    }\n    console.log(\"\");\n    console.log(\"Card's in pile:\");\n    for (let card of this.pile) {\n      card.printCard();\n    }\n    console.log(\"\");\n    for (let p of this.participants) {\n      p.printHand();\n      console.log();\n    }\n  }\n}\nconst rootElem = document.getElementById('root');\nif (rootElem == null) {\n  alert('you forgot to put a root element in your HTML file.');\n}\nconst root = (0, client_1.createRoot)(rootElem);\nroot.render( /*#__PURE__*/_jsxDEV(react_1.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 352,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["_jsxFileName","jsxDEV","_jsxDEV","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","react_1","require","client_1","Rank","Suit","Card","constructor","cardIndex","cardString","suit","rank","String","fromCodePoint","printCard","console","log","Participant","name","hand","handIndex","hasPlayableCard","i","length","Eight","playCard","cardInHand","removedCard","splice","add","card","push","cycleCard","hasWon","printHand","GameState","playerCards","topCard","Game","Component","props","stock","pile","player","participants","shuffleStock","hostGame","newState","state","render","s","children","fileName","lineNumber","columnNumber","type","onClick","onClickPlay","onClickCycle","onClickDraw","firstCardIndex","Math","floor","random","secondCardIndex","temp","dealCard","pop","switchSuit","suitCmd","cardInQuestion","updateState","bot","cardDealt","setState","p","printGameStatus","rootElem","document","getElementById","alert","root","createRoot","StrictMode"],"sources":["/Users/thanhdo/WSU/CS224/CS-220-Project1/Frontend_Crazy_Eights/src/index.jsx"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst client_1 = require(\"react-dom/client\");\nvar Rank;\n(function (Rank) {\n    Rank[Rank[\"Ace\"] = 1] = \"Ace\";\n    Rank[Rank[\"Two\"] = 2] = \"Two\";\n    Rank[Rank[\"Three\"] = 3] = \"Three\";\n    Rank[Rank[\"Four\"] = 4] = \"Four\";\n    Rank[Rank[\"Five\"] = 5] = \"Five\";\n    Rank[Rank[\"Six\"] = 6] = \"Six\";\n    Rank[Rank[\"Seven\"] = 7] = \"Seven\";\n    Rank[Rank[\"Eight\"] = 8] = \"Eight\";\n    Rank[Rank[\"Nine\"] = 9] = \"Nine\";\n    Rank[Rank[\"Ten\"] = 10] = \"Ten\";\n    Rank[Rank[\"Jack\"] = 11] = \"Jack\";\n    Rank[Rank[\"Queen\"] = 13] = \"Queen\";\n    Rank[Rank[\"King\"] = 14] = \"King\";\n})(Rank || (Rank = {}));\nvar Suit;\n(function (Suit) {\n    Suit[Suit[\"Spades\"] = 160] = \"Spades\";\n    Suit[Suit[\"Clubs\"] = 208] = \"Clubs\";\n    Suit[Suit[\"Diamonds\"] = 192] = \"Diamonds\";\n    Suit[Suit[\"Hearts\"] = 176] = \"Hearts\";\n})(Suit || (Suit = {}));\nclass Card {\n    constructor(cardIndex) {\n        this.cardString = \"\";\n        // Calculate the rank and suit of the card\n        this.suit = cardIndex & 0x000F0;\n        this.rank = cardIndex & 0x0000F;\n        // Convert card into a string\n        this.cardString = String.fromCodePoint(0x1F000 | this.suit | this.rank) + \" \" + Rank[this.rank] + \" of \" + Suit[this.suit];\n    }\n    /**\n     *  Takes the cardString field and prints it to console\n     */\n    printCard() {\n        console.log(this.cardString);\n    }\n}\nclass Participant {\n    constructor(name) {\n        this.name = \"\";\n        this.hand = [];\n        this.handIndex = 0;\n        this.name = name;\n    }\n    /**\n     * Sets the handIndex to a playable card depending on the given\n     * rank and suit and returns true or false otherwise\n     */\n    hasPlayableCard(rank, suit) {\n        // Loops through the hand to find a playable card\n        for (let i = 0; i < this.hand.length; i++) {\n            if (this.hand[i].suit === suit || this.hand[i].rank === rank || this.hand[i].rank === Rank.Eight) {\n                this.handIndex = i;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Remove and return the card at handIndex depending on the,\n     * rank and suit, otherwise, return undefined.\n     */\n    playCard(rank, suit) {\n        let cardInHand = this.hand[this.handIndex];\n        // If the card has the same suit, rank, or is an eight, play card.\n        if (cardInHand.suit === suit || cardInHand.rank === rank || cardInHand.rank === Rank.Eight) {\n            let removedCard = this.hand.splice(this.handIndex, 1);\n            this.handIndex = 0;\n            console.log(this.name, \"played a\", removedCard[0].cardString);\n            return removedCard[0];\n        }\n        return undefined;\n    }\n    /**\n     * Add a card to hand, and set the handIndex to this card\n     */\n    add(card) {\n        this.hand.push(card);\n        this.handIndex = this.hand.length - 1;\n    }\n    /**\n     * Cycles to the next card in hand\n     */\n    cycleCard() {\n        this.handIndex++;\n        if (this.handIndex >= this.hand.length)\n            this.handIndex = 0;\n        console.log(this.name, \"is holding the\", this.hand[this.handIndex].cardString);\n    }\n    /**\n     * Check if the participant has an empty hand\n     */\n    hasWon() {\n        return this.hand.length == 0;\n    }\n    /**\n     * Print the cards in hand\n     */\n    printHand() {\n        console.log(this.name + \"'s Cards:\");\n        for (let card of this.hand) {\n            card.printCard();\n        }\n    }\n}\nclass GameState {\n    constructor() {\n        this.cardInHand = new Card(0x1F0A1);\n        this.playerCards = [];\n        this.topCard = new Card(0x1F0A1);\n    }\n}\nclass Game extends react_1.Component {\n    constructor(props) {\n        super(props);\n        this.stock = [];\n        this.pile = [];\n        this.player = new Participant(\"Player\");\n        this.participants = [];\n        this.topCard = this.pile[0];\n        this.participants.push(this.player);\n        this.participants.push(new Participant(\"Bot 1\"));\n        this.participants.push(new Participant(\"Bot 2\"));\n        this.participants.push(new Participant(\"Bot 3\"));\n        // Initialize gameDeck with all 52 cards\n        for (let suit = 0xA0; suit <= 0xD0; suit += 0x10) {\n            for (let rank = 0x01; rank <= 0x0E; rank += 0x01) {\n                if (rank === 0x0C)\n                    continue;\n                this.stock.push(new Card(0x1F000 | suit | rank));\n            }\n        }\n        this.shuffleStock();\n        this.hostGame();\n        let newState = new GameState();\n        newState.cardInHand = this.player.hand[this.player.handIndex];\n        newState.topCard = this.topCard;\n        newState.playerCards = this.player.hand;\n        this.state = newState;\n    }\n    render() {\n        let s = \"\";\n        for (let card of this.state.playerCards) {\n            s += card.cardString;\n        }\n        return <div>\n            <p>Crazy Eights.</p>\n            <p>{this.state.cardInHand.cardString}</p>\n            <p>{this.state.topCard.cardString}</p>\n\t\t\t<p>{s}</p>\n            <input type=\"button\" value=\"Play Card\" onClick={() => this.onClickPlay()}/>\n            <input type=\"button\" value=\"Cycle Card\" onClick={() => this.onClickCycle()}/>\n            <input type=\"button\" value=\"Draw Card\" onClick={() => this.onClickDraw()}/>\n\t\t\t</div>;\n    }\n    /**\n     * Shuffles the cards in stock\n     */\n    shuffleStock() {\n        // Choose two random cards and swap. Repeat 51 times.\n        for (let i = 0; i < 51; i++) {\n            let firstCardIndex = Math.floor(Math.random() * this.stock.length);\n            let secondCardIndex = Math.floor(Math.random() * this.stock.length);\n            let temp = this.stock[firstCardIndex];\n            this.stock[firstCardIndex] = this.stock[secondCardIndex];\n            this.stock[secondCardIndex] = temp;\n        }\n    }\n    /**\n     * Returns the top card from the stock. If stock was empty, take all\n     * but the top card from the pile and shuffle it into the stock\n     */\n    dealCard() {\n        if (this.stock.length === 0) {\n            this.stock = this.pile.splice(0, this.pile.length - 1);\n            this.shuffleStock();\n        }\n        return this.stock.pop();\n    }\n    /**\n     * Take a command to return a card with that suit.\n     * To be used when an Eight is played.\n     */\n    switchSuit(suitCmd) {\n        switch (suitCmd) {\n            case (0):\n            case ('s'):\n                console.log(\"\\nThe suit was switched to Spades!\");\n                return new Card(0x1F000 | 0xA0);\n            case (1):\n            case ('c'):\n                console.log(\"\\nThe suit was switched to Clubs!\");\n                return new Card(0x1F000 | 0xD0);\n            case (2):\n            case ('d'):\n                console.log(\"\\nThe suit was switched to Diamonds!\");\n                return new Card(0x1F000 | 0xC0);\n            case (3):\n            case ('h'):\n                console.log(\"\\nThe suit was switched to Hearts!\");\n                return new Card(0x1F000 | 0xB0);\n        }\n        return new Card(0x1F000 | 0xA0);\n    }\n    onClickPlay() {\n        // Player Turn\n        let cardInQuestion = this.player.playCard(this.topCard.rank, this.topCard.suit);\n        if (cardInQuestion === undefined) {\n            return false;\n        }\n        this.topCard = cardInQuestion;\n        this.pile.push(this.topCard);\n        this.updateState;\n        // Ask for suit if player played an Eight\n        // if (this.topCard.rank === Rank.Eight) {\n        // \tlet newCmd = '';\n        // \twhile (newCmd !== 's' && newCmd !== 'c' && newCmd !== 'd' && newCmd !== 'h') {\n        // \t\tnewCmd = readline.question(\"Type (s)pades or (c)lubs or (d)iamonds or (h)earts: \");\n        // \t}\n        // \tthis.topCard = this.switchSuit(newCmd);\n        // }\n        if (this.player.hasWon()) {\n            console.log(\"Player has won!\");\n            return true;\n        }\n        //Bots' Turn\n        for (let i = 1; i < 4; i++) {\n            let bot = this.participants[i];\n            // Bot draws cards until it's playable\n            while (!bot.hasPlayableCard(this.topCard.rank, this.topCard.suit))\n                bot.add(this.dealCard());\n            this.topCard = bot.playCard(this.topCard.rank, this.topCard.suit);\n            this.pile.push(this.topCard);\n            // If Bot played an Eight, choose a random suit\n            if (this.topCard.rank === Rank.Eight)\n                this.topCard = this.switchSuit(Math.floor(Math.random() * 4));\n            this.updateState();\n            if (bot.hasWon()) {\n                console.log(bot.name, \"has won!\");\n                return true;\n            }\n        }\n        return false;\n    }\n    onClickCycle() {\n        this.player.cycleCard();\n        this.updateState();\n    }\n    onClickDraw() {\n        let cardDealt = this.dealCard();\n        this.player.add(cardDealt);\n        console.log(\"Player was dealt the\", cardDealt.cardString);\n        this.updateState();\n    }\n    updateState() {\n        let newState = new GameState();\n        newState.cardInHand = this.player.hand[this.player.handIndex];\n        newState.topCard = this.topCard;\n        newState.playerCards = this.player.hand;\n        this.setState(newState);\n    }\n    /**\n     * Simulates a game of Crazy Eights\n     */\n    hostGame() {\n        // Deal 5 cards to all participants\n        for (let i = 0; i < 5; i++) {\n            for (let p of this.participants) {\n                p.add(this.dealCard());\n            }\n        }\n        // Place a starter card \n        while (true) {\n            this.topCard = this.stock.pop();\n            this.pile.push(this.topCard);\n            if (this.topCard.rank !== Rank.Eight)\n                break;\n        }\n        // // Loop through the participants' turn\n        // let cmd = '';\n        // let hasWinner = false;\n        // while(!hasWinner) {\n        // \tconsole.log(\"\\nTop card is\",this.topCard.cardString);\n        // \tthis.player.printHand();\n        // \tconsole.log(\"\\nPlayer is holding the\", this.player.hand[this.player.handIndex].cardString);\n        // \t// Ask for command\n        // \tcmd = readline.question(\"Type (p)lace or (c)ycle or (d)raw: \");\n        // \tswitch(cmd) {\n        // \tcase ('p'):\n        // \t\thasWinner = this.onClickPlay();\n        // \t\tbreak;\n        // \tcase ('c'):\n        // \t\tthis.onClickCycle();\n        // \t\tbreak;\n        // \tcase ('d'):\n        // \t\tthis.onClickDraw();\n        // \t\tbreak;\n        // \t}\n        //}\n    }\n    printGameStatus() {\n        console.log(\"Card's in stock:\");\n        for (let card of this.stock) {\n            card.printCard();\n        }\n        console.log(\"\");\n        console.log(\"Card's in pile:\");\n        for (let card of this.pile) {\n            card.printCard();\n        }\n        console.log(\"\");\n        for (let p of this.participants) {\n            p.printHand();\n            console.log();\n        }\n    }\n}\nconst rootElem = document.getElementById('root');\nif (rootElem == null) {\n    alert('you forgot to put a root element in your HTML file.');\n}\nconst root = (0, client_1.createRoot)(rootElem);\nroot.render(<react_1.StrictMode>\n        <Game />\n    </react_1.StrictMode>);\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACb,IAAIC,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMC,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,SAAAA,CAAA,EAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAJ,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMf,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3FhB,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIJ,MAAM,CAACqB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,EAAEf,CAAC,CAAC,EAAEL,eAAe,CAACqB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACDpB,MAAM,CAACc,cAAc,CAACU,OAAO,EAAE,YAAY,EAAE;EAAEP,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMQ,OAAO,GAAGP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC5C,IAAIE,IAAI;AACR,CAAC,UAAUA,IAAI,EAAE;EACbA,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EAC7BA,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EAC7BA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACjCA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/BA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/BA,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EAC7BA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACjCA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACjCA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/BA,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK;EAC9BA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;EAChCA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EAClCA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;AACpC,CAAC,EAAEA,IAAI,KAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB,IAAIC,IAAI;AACR,CAAC,UAAUA,IAAI,EAAE;EACbA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,QAAQ;EACrCA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,OAAO;EACnCA,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU;EACzCA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,QAAQ;AACzC,CAAC,EAAEA,IAAI,KAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB,MAAMC,IAAI,CAAC;EACPC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB;IACA,IAAI,CAACC,IAAI,GAAGF,SAAS,GAAG,OAAO;IAC/B,IAAI,CAACG,IAAI,GAAGH,SAAS,GAAG,OAAO;IAC/B;IACA,IAAI,CAACC,UAAU,GAAGG,MAAM,CAACC,aAAa,CAAC,OAAO,GAAG,IAAI,CAACH,IAAI,GAAG,IAAI,CAACC,IAAI,CAAC,GAAG,GAAG,GAAGP,IAAI,CAAC,IAAI,CAACO,IAAI,CAAC,GAAG,MAAM,GAAGN,IAAI,CAAC,IAAI,CAACK,IAAI,CAAC;EAC9H;EACA;AACJ;AACA;EACII,SAASA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,CAAC;EAChC;AACJ;AACA,MAAMQ,WAAW,CAAC;EACdV,WAAWA,CAACW,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACF,IAAI,GAAGA,IAAI;EACpB;EACA;AACJ;AACA;AACA;EACIG,eAAeA,CAACV,IAAI,EAAED,IAAI,EAAE;IACxB;IACA,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAI,IAAI,CAACH,IAAI,CAACG,CAAC,CAAC,CAACZ,IAAI,KAAKA,IAAI,IAAI,IAAI,CAACS,IAAI,CAACG,CAAC,CAAC,CAACX,IAAI,KAAKA,IAAI,IAAI,IAAI,CAACQ,IAAI,CAACG,CAAC,CAAC,CAACX,IAAI,KAAKP,IAAI,CAACoB,KAAK,EAAE;QAC9F,IAAI,CAACJ,SAAS,GAAGE,CAAC;QAClB,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;EACA;AACJ;AACA;AACA;EACIG,QAAQA,CAACd,IAAI,EAAED,IAAI,EAAE;IACjB,IAAIgB,UAAU,GAAG,IAAI,CAACP,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC;IAC1C;IACA,IAAIM,UAAU,CAAChB,IAAI,KAAKA,IAAI,IAAIgB,UAAU,CAACf,IAAI,KAAKA,IAAI,IAAIe,UAAU,CAACf,IAAI,KAAKP,IAAI,CAACoB,KAAK,EAAE;MACxF,IAAIG,WAAW,GAAG,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,IAAI,CAACR,SAAS,EAAE,CAAC,CAAC;MACrD,IAAI,CAACA,SAAS,GAAG,CAAC;MAClBL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,IAAI,EAAE,UAAU,EAAES,WAAW,CAAC,CAAC,CAAC,CAAClB,UAAU,CAAC;MAC7D,OAAOkB,WAAW,CAAC,CAAC,CAAC;IACzB;IACA,OAAO7C,SAAS;EACpB;EACA;AACJ;AACA;EACI+C,GAAGA,CAACC,IAAI,EAAE;IACN,IAAI,CAACX,IAAI,CAACY,IAAI,CAACD,IAAI,CAAC;IACpB,IAAI,CAACV,SAAS,GAAG,IAAI,CAACD,IAAI,CAACI,MAAM,GAAG,CAAC;EACzC;EACA;AACJ;AACA;EACIS,SAASA,CAAA,EAAG;IACR,IAAI,CAACZ,SAAS,EAAE;IAChB,IAAI,IAAI,CAACA,SAAS,IAAI,IAAI,CAACD,IAAI,CAACI,MAAM,EAClC,IAAI,CAACH,SAAS,GAAG,CAAC;IACtBL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,IAAI,EAAE,gBAAgB,EAAE,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,CAACX,UAAU,CAAC;EAClF;EACA;AACJ;AACA;EACIwB,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACd,IAAI,CAACI,MAAM,IAAI,CAAC;EAChC;EACA;AACJ;AACA;EACIW,SAASA,CAAA,EAAG;IACRnB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,IAAI,GAAG,WAAW,CAAC;IACpC,KAAK,IAAIY,IAAI,IAAI,IAAI,CAACX,IAAI,EAAE;MACxBW,IAAI,CAAChB,SAAS,CAAC,CAAC;IACpB;EACJ;AACJ;AACA,MAAMqB,SAAS,CAAC;EACZ5B,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmB,UAAU,GAAG,IAAIpB,IAAI,CAAC,OAAO,CAAC;IACnC,IAAI,CAAC8B,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,IAAI/B,IAAI,CAAC,OAAO,CAAC;EACpC;AACJ;AACA,MAAMgC,IAAI,SAASrC,OAAO,CAACsC,SAAS,CAAC;EACjChC,WAAWA,CAACiC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,MAAM,GAAG,IAAI1B,WAAW,CAAC,QAAQ,CAAC;IACvC,IAAI,CAAC2B,YAAY,GAAG,EAAE;IACtB,IAAI,CAACP,OAAO,GAAG,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC;IAC3B,IAAI,CAACE,YAAY,CAACb,IAAI,CAAC,IAAI,CAACY,MAAM,CAAC;IACnC,IAAI,CAACC,YAAY,CAACb,IAAI,CAAC,IAAId,WAAW,CAAC,OAAO,CAAC,CAAC;IAChD,IAAI,CAAC2B,YAAY,CAACb,IAAI,CAAC,IAAId,WAAW,CAAC,OAAO,CAAC,CAAC;IAChD,IAAI,CAAC2B,YAAY,CAACb,IAAI,CAAC,IAAId,WAAW,CAAC,OAAO,CAAC,CAAC;IAChD;IACA,KAAK,IAAIP,IAAI,GAAG,IAAI,EAAEA,IAAI,IAAI,IAAI,EAAEA,IAAI,IAAI,IAAI,EAAE;MAC9C,KAAK,IAAIC,IAAI,GAAG,IAAI,EAAEA,IAAI,IAAI,IAAI,EAAEA,IAAI,IAAI,IAAI,EAAE;QAC9C,IAAIA,IAAI,KAAK,IAAI,EACb;QACJ,IAAI,CAAC8B,KAAK,CAACV,IAAI,CAAC,IAAIzB,IAAI,CAAC,OAAO,GAAGI,IAAI,GAAGC,IAAI,CAAC,CAAC;MACpD;IACJ;IACA,IAAI,CAACkC,YAAY,CAAC,CAAC;IACnB,IAAI,CAACC,QAAQ,CAAC,CAAC;IACf,IAAIC,QAAQ,GAAG,IAAIZ,SAAS,CAAC,CAAC;IAC9BY,QAAQ,CAACrB,UAAU,GAAG,IAAI,CAACiB,MAAM,CAACxB,IAAI,CAAC,IAAI,CAACwB,MAAM,CAACvB,SAAS,CAAC;IAC7D2B,QAAQ,CAACV,OAAO,GAAG,IAAI,CAACA,OAAO;IAC/BU,QAAQ,CAACX,WAAW,GAAG,IAAI,CAACO,MAAM,CAACxB,IAAI;IACvC,IAAI,CAAC6B,KAAK,GAAGD,QAAQ;EACzB;EACAE,MAAMA,CAAA,EAAG;IACL,IAAIC,CAAC,GAAG,EAAE;IACV,KAAK,IAAIpB,IAAI,IAAI,IAAI,CAACkB,KAAK,CAACZ,WAAW,EAAE;MACrCc,CAAC,IAAIpB,IAAI,CAACrB,UAAU;IACxB;IACA,oBAAOnC,OAAA;MAAA6E,QAAA,gBACH7E,OAAA;QAAA6E,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpBhF,OAAA;QAAA6E,QAAA,EAAI,IAAI,CAACH,KAAK,CAACtB,UAAU,CAACjB;MAAU;QAAA2C,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzChF,OAAA;QAAA6E,QAAA,EAAI,IAAI,CAACH,KAAK,CAACX,OAAO,CAAC5B;MAAU;QAAA2C,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/ChF,OAAA;QAAA6E,QAAA,EAAID;MAAC;QAAAE,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACDhF,OAAA;QAAOiF,IAAI,EAAC,QAAQ;QAAC9D,KAAK,EAAC,WAAW;QAAC+D,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,WAAW,CAAC;MAAE;QAAAL,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3EhF,OAAA;QAAOiF,IAAI,EAAC,QAAQ;QAAC9D,KAAK,EAAC,YAAY;QAAC+D,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACE,YAAY,CAAC;MAAE;QAAAN,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7EhF,OAAA;QAAOiF,IAAI,EAAC,QAAQ;QAAC9D,KAAK,EAAC,WAAW;QAAC+D,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACG,WAAW,CAAC;MAAE;QAAAP,QAAA,EAAAhF,YAAA;QAAAiF,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAF,QAAA,EAAAhF,YAAA;MAAAiF,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC;EACL;EACA;AACJ;AACA;EACIT,YAAYA,CAAA,EAAG;IACX;IACA,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzB,IAAIsC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAACtB,KAAK,CAAClB,MAAM,CAAC;MAClE,IAAIyC,eAAe,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAACtB,KAAK,CAAClB,MAAM,CAAC;MACnE,IAAI0C,IAAI,GAAG,IAAI,CAACxB,KAAK,CAACmB,cAAc,CAAC;MACrC,IAAI,CAACnB,KAAK,CAACmB,cAAc,CAAC,GAAG,IAAI,CAACnB,KAAK,CAACuB,eAAe,CAAC;MACxD,IAAI,CAACvB,KAAK,CAACuB,eAAe,CAAC,GAAGC,IAAI;IACtC;EACJ;EACA;AACJ;AACA;AACA;EACIC,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACzB,KAAK,CAAClB,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACkB,KAAK,GAAG,IAAI,CAACC,IAAI,CAACd,MAAM,CAAC,CAAC,EAAE,IAAI,CAACc,IAAI,CAACnB,MAAM,GAAG,CAAC,CAAC;MACtD,IAAI,CAACsB,YAAY,CAAC,CAAC;IACvB;IACA,OAAO,IAAI,CAACJ,KAAK,CAAC0B,GAAG,CAAC,CAAC;EAC3B;EACA;AACJ;AACA;AACA;EACIC,UAAUA,CAACC,OAAO,EAAE;IAChB,QAAQA,OAAO;MACX,KAAM,CAAC;MACP,KAAM,GAAG;QACLtD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjD,OAAO,IAAIV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACnC,KAAM,CAAC;MACP,KAAM,GAAG;QACLS,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,OAAO,IAAIV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACnC,KAAM,CAAC;MACP,KAAM,GAAG;QACLS,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnD,OAAO,IAAIV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACnC,KAAM,CAAC;MACP,KAAM,GAAG;QACLS,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjD,OAAO,IAAIV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACvC;IACA,OAAO,IAAIA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;EACnC;EACAmD,WAAWA,CAAA,EAAG;IACV;IACA,IAAIa,cAAc,GAAG,IAAI,CAAC3B,MAAM,CAAClB,QAAQ,CAAC,IAAI,CAACY,OAAO,CAAC1B,IAAI,EAAE,IAAI,CAAC0B,OAAO,CAAC3B,IAAI,CAAC;IAC/E,IAAI4D,cAAc,KAAKxF,SAAS,EAAE;MAC9B,OAAO,KAAK;IAChB;IACA,IAAI,CAACuD,OAAO,GAAGiC,cAAc;IAC7B,IAAI,CAAC5B,IAAI,CAACX,IAAI,CAAC,IAAI,CAACM,OAAO,CAAC;IAC5B,IAAI,CAACkC,WAAW;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC5B,MAAM,CAACV,MAAM,CAAC,CAAC,EAAE;MACtBlB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,OAAO,IAAI;IACf;IACA;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,IAAIkD,GAAG,GAAG,IAAI,CAAC5B,YAAY,CAACtB,CAAC,CAAC;MAC9B;MACA,OAAO,CAACkD,GAAG,CAACnD,eAAe,CAAC,IAAI,CAACgB,OAAO,CAAC1B,IAAI,EAAE,IAAI,CAAC0B,OAAO,CAAC3B,IAAI,CAAC,EAC7D8D,GAAG,CAAC3C,GAAG,CAAC,IAAI,CAACqC,QAAQ,CAAC,CAAC,CAAC;MAC5B,IAAI,CAAC7B,OAAO,GAAGmC,GAAG,CAAC/C,QAAQ,CAAC,IAAI,CAACY,OAAO,CAAC1B,IAAI,EAAE,IAAI,CAAC0B,OAAO,CAAC3B,IAAI,CAAC;MACjE,IAAI,CAACgC,IAAI,CAACX,IAAI,CAAC,IAAI,CAACM,OAAO,CAAC;MAC5B;MACA,IAAI,IAAI,CAACA,OAAO,CAAC1B,IAAI,KAAKP,IAAI,CAACoB,KAAK,EAChC,IAAI,CAACa,OAAO,GAAG,IAAI,CAAC+B,UAAU,CAACP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACjE,IAAI,CAACQ,WAAW,CAAC,CAAC;MAClB,IAAIC,GAAG,CAACvC,MAAM,CAAC,CAAC,EAAE;QACdlB,OAAO,CAACC,GAAG,CAACwD,GAAG,CAACtD,IAAI,EAAE,UAAU,CAAC;QACjC,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;EACAwC,YAAYA,CAAA,EAAG;IACX,IAAI,CAACf,MAAM,CAACX,SAAS,CAAC,CAAC;IACvB,IAAI,CAACuC,WAAW,CAAC,CAAC;EACtB;EACAZ,WAAWA,CAAA,EAAG;IACV,IAAIc,SAAS,GAAG,IAAI,CAACP,QAAQ,CAAC,CAAC;IAC/B,IAAI,CAACvB,MAAM,CAACd,GAAG,CAAC4C,SAAS,CAAC;IAC1B1D,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEyD,SAAS,CAAChE,UAAU,CAAC;IACzD,IAAI,CAAC8D,WAAW,CAAC,CAAC;EACtB;EACAA,WAAWA,CAAA,EAAG;IACV,IAAIxB,QAAQ,GAAG,IAAIZ,SAAS,CAAC,CAAC;IAC9BY,QAAQ,CAACrB,UAAU,GAAG,IAAI,CAACiB,MAAM,CAACxB,IAAI,CAAC,IAAI,CAACwB,MAAM,CAACvB,SAAS,CAAC;IAC7D2B,QAAQ,CAACV,OAAO,GAAG,IAAI,CAACA,OAAO;IAC/BU,QAAQ,CAACX,WAAW,GAAG,IAAI,CAACO,MAAM,CAACxB,IAAI;IACvC,IAAI,CAACuD,QAAQ,CAAC3B,QAAQ,CAAC;EAC3B;EACA;AACJ;AACA;EACID,QAAQA,CAAA,EAAG;IACP;IACA,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,KAAK,IAAIqD,CAAC,IAAI,IAAI,CAAC/B,YAAY,EAAE;QAC7B+B,CAAC,CAAC9C,GAAG,CAAC,IAAI,CAACqC,QAAQ,CAAC,CAAC,CAAC;MAC1B;IACJ;IACA;IACA,OAAO,IAAI,EAAE;MACT,IAAI,CAAC7B,OAAO,GAAG,IAAI,CAACI,KAAK,CAAC0B,GAAG,CAAC,CAAC;MAC/B,IAAI,CAACzB,IAAI,CAACX,IAAI,CAAC,IAAI,CAACM,OAAO,CAAC;MAC5B,IAAI,IAAI,CAACA,OAAO,CAAC1B,IAAI,KAAKP,IAAI,CAACoB,KAAK,EAChC;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;EACAoD,eAAeA,CAAA,EAAG;IACd7D,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,KAAK,IAAIc,IAAI,IAAI,IAAI,CAACW,KAAK,EAAE;MACzBX,IAAI,CAAChB,SAAS,CAAC,CAAC;IACpB;IACAC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IACfD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,KAAK,IAAIc,IAAI,IAAI,IAAI,CAACY,IAAI,EAAE;MACxBZ,IAAI,CAAChB,SAAS,CAAC,CAAC;IACpB;IACAC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IACf,KAAK,IAAI2D,CAAC,IAAI,IAAI,CAAC/B,YAAY,EAAE;MAC7B+B,CAAC,CAACzC,SAAS,CAAC,CAAC;MACbnB,OAAO,CAACC,GAAG,CAAC,CAAC;IACjB;EACJ;AACJ;AACA,MAAM6D,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAChD,IAAIF,QAAQ,IAAI,IAAI,EAAE;EAClBG,KAAK,CAAC,qDAAqD,CAAC;AAChE;AACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE9E,QAAQ,CAAC+E,UAAU,EAAEL,QAAQ,CAAC;AAC/CI,IAAI,CAAChC,MAAM,eAAC3E,OAAA,CAAC2B,OAAO,CAACkF,UAAU;EAAAhC,QAAA,eACvB7E,OAAA,CAACgE,IAAI;IAAAc,QAAA,EAAAhF,YAAA;IAAAiF,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAF,QAAA,EAAAhF,YAAA;EAAAiF,UAAA;EAAAC,YAAA;AAAA,OACQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}